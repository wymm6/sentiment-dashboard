import streamlit as st
import pandas as pd

st.set_page_config(page_title="Sentiment Forex combin√©", layout="wide")
st.title("üìä Sentiment Forex ‚Äì Barre combin√©e (style Myfxbook)")

@st.cache_data
def charger_donnees():
    return pd.read_csv("sentiment.csv")

df = charger_donnees()

# === S√©lecteur d'actifs
actifs_disponibles = df["Actif"].tolist()
actifs_selectionn√©s = st.multiselect("üóÇÔ∏è S√©lectionne les actifs √† afficher :", actifs_disponibles, default=actifs_disponibles)

# === Filtrage
df_filtr√© = df[df["Actif"].isin(actifs_selectionn√©s)]

# === Slider de filtre pour % min
seuil = st.slider("Afficher les actifs avec un % achat ou vente sup√©rieur √† :", 0, 100, 0)
df_filtr√© = df_filtr√©[(df_filtr√©["% Achat"] >= seuil) | (df_filtr√©["% Vente"] >= seuil)]

# === Fonction pour afficher une barre combin√©e
def barre_combinee(achat, vente):
    return f"""
    <div style="width:100%; height:18px; display:flex; background-color:#f0f0f0; border-radius:4px; overflow:hidden;">
        <div style="width:{achat}%; background-color:green;"></div>
        <div style="width:{vente}%; background-color:red;"></div>
    </div>
    """

st.markdown("### üíπ Affichage combin√© Achat / Vente")

# === Affichage par ligne
for _, row in df_filtr√©.iterrows():
    st.markdown(f"**{row['Actif']}**", unsafe_allow_html=True)
    st.markdown(barre_combinee(row["% Achat"], row["% Vente"]), unsafe_allow_html=True)
    st.markdown(
        f"<span style='color:green;'>Achat : {row['% Achat']}%</span> &nbsp;&nbsp;&nbsp;"
        f"<span style='color:red;'>Vente : {row['% Vente']}%</span><hr>",
        unsafe_allow_html=True
    )
